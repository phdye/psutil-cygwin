name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 psutil_cygwin/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 psutil_cygwin/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check formatting with black
      run: |
        pip install black
        black --check psutil_cygwin/
    
    - name: Type check with mypy
      run: |
        pip install mypy
        mypy psutil_cygwin/ --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests/test_unit.py -v --cov=psutil_cygwin --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  cygwin-test:
    runs-on: windows-latest
    defaults:
      run:
        shell: C:\cygwin\bin\bash.exe --login -o igncr '{0}'
    
    steps:
    - name: Set up Cygwin
      uses: cygwin/cygwin-install-action@master
      with:
        packages: python3 python3-pip python3-setuptools git procps-ng
    
    - uses: actions/checkout@v3
    
    - name: Install package
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -e ".[test]"
    
    - name: Run Cygwin integration tests
      run: |
        python3 -m pytest tests/test_integration.py -v --tb=short
    
    - name: Run comprehensive test suite
      run: |
        python3 tests/test_psutil_cygwin.py

  build:
    needs: [test, cygwin-test]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"
    
    - name: Build documentation
      run: |
        cd docs/
        make html
    
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/_build/html/
